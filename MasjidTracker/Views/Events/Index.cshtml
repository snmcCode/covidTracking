@model MasjidTracker.FrontEnd.Models.EventViewModel
@using Microsoft.AspNetCore.Html

@{
    ViewData["Title"] = "Events";
    bool showModal = ViewBag.EventFull == true ? true : false;
    DateTime currDateTime = DateTime.Now;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <script src="https://kit.fontawesome.com/bdd89edb33.js"></script>
    <link rel="manifest" href="/manifest.json" />

    <link rel="stylesheet" href="~/css/events.css" />
    <link rel="stylesheet" href="~/css/card.css" />
    <title>Events</title>
</head>


<body>

<div class="page-content">
<br>
  @{ 
  var announcement = ViewBag.Announcement;
  }
  @if(!string.IsNullOrEmpty(announcement) && announcement != " "){
  <div style="text-align: center; background-color: #F5FBFD; padding: 15px; margin-bottom: 30px; border-radius: 6px;">
      <p style="font-size: 17px; margin-bottom: 0px;font-weight: 500;">
          @(new HtmlString(announcement))
          <br> 
      </p> 
  </div>
  }

  <div class = "heading">
    <h2>My Events</h2>
  </div>
   
  <div class="scrolling-wrapper"> 
     @if (Model?.UserEvents == null || Model.UserEvents.Count < 0) {
      <div><i> You are not registered in any events.</i> </div>
    } else {
        @foreach (var item in Model.UserEvents)
        {
          if(!(currDateTime > item.DateTime.AddHours(1))){
          <div class="mycard">
              @{var colour = "pink";}
              <div class="myfront">
                @{if (item.OrgId == 1){ // snmc
                  colour = "palevioletred";
                }
                }
                <div class="d-flex align-items-start align-content-center flex-column myfront-content">
                  <div class="mb-auto" style="align-self: center; line-height: 1.5rem">
                    <span style="align-self: center; padding-bottom: 4px">
                      <span> <i class="fas fa-mosque" style = "color: @colour; font-size: 1rem;"></i> </span> 
                      <span style = "color: @colour; font-size: 1rem;"> 
                          @{var event_org_string = Model.Organizations[item.OrgId];}
                          @event_org_string
                      </span>
                    </span> <br>
                    <span class="event-name">@Html.DisplayFor(modelItem => item.Name) </span> <br>
                  </div>
                  
                  <div class="mt-auto;" style="align-self: center">
                    <div style = "color: black; font-size: 0.8rem; align-self: center;"> 
                        @item.DateTime.ToLongDateString()
                    </div>
                    <div style = "color: black; font-size: 0.8rem; align-self: center; "> 
                        @item.DateTime.ToShortTimeString()
                    </div>
                    <div style= "align-self: center; padding-top: 2px">
                      <span class="form-group"> 
                        <form name="unregisterform" method="post">  
                          <input type="hidden" id="eventid" name="eventid" value=@item.Id>
                            @{ 
                              if (currDateTime > item.DateTime ){
                                <input type="submit" value="Unregister" asp-action="Unregister" asp-controller="Events" class="button" disabled/>
                              } else {
                                <input type="submit" value="Unregister" asp-action="Unregister" asp-controller="Events" class="button"/>
                              }
                            }                  
                        </form>
                      </span>
                    </div>
                  </div>
                </div>              
              </div>
            </div>
          }
        } 
      }
  </div> 
 
<br><br>

  <div class = "heading">
    @if (Model.SelectedOrg == "All"){
      <h2>All Events</h2> 
    } else {
      <h2>@Model.SelectedOrg's Events</h2> 
    }
   
  </div>

  <div style="margin-left: 18px">
    <p class="description">  
      <form style="display: inline; margin-left: 10px" name="filterform" method="get" asp-action="FilterEvents" asp-controller="Events">
        Filter by Organization:
        <select onchange="" id="filter" name="selection" style="border:none;" asp-items="new SelectList(Model.Organizations.Values)">
          <option value="" selected disabled hidden>@Model.SelectedOrg</option>
          <option value="All">All</option>
        </select>
      </form>
    </p>
  </div>

 <hr>

  @foreach (var groupid in Model.GroupedEvents.Keys) // for each group
  {
    <div class="scrolling-wrapper">
    @{int hidden = 0;}
    @foreach (var item in Model.GroupedEvents[groupid]) // for each event in the group
    {
      var showCard = item.Capacity > 0 && !(currDateTime > item.DateTime.AddHours(1));
      if (!showCard) hidden++;
      if (showCard){
      <div class="flip-card" >
        <div class="flip-card-inner" >
          @{var colour = "pink";}
          <div class="flip-card-front" >
              @{if (item.OrgId == 1){
                colour = "palevioletred";
                }
              }
              @if (item != null && item.targetAudience != 0) {
                  <div class="ribbon ribbon-top-right"><span></span> </div>
              }
              
              <p class="d-flex align-items-center align-content-center flex-column" style="height: 100%; width: 100%; padding: 15px 2px 15px 2px;">
                <span style="align-self: center;">
                  <span> <i class="fas fa-mosque" style = "color: @colour; font-size: 1rem; "></i> </span> 
                  <span style = "color: @colour; font-size: 1rem;"> 
                      @{var event_org_string = Model.Organizations[item.OrgId];}
                      @event_org_string
                  </span><br>
                <span class="event-name">@Html.DisplayFor(modelItem => item.Name) </span> 
                
                </span> 
                
                <br>         
                  
                <span> <i> Remaining Spots: <span> @{var spots = Math.Max(0, item.Capacity - item.bookingCount);} @spots </span> </i> </span>
                
                <span class="mt-auto" style = "align-self: center; font-size: 0.9rem"> 
                    @item.DateTime.ToLongDateString()
                </span>  

                <span class="mt-auto" style = "align-self: center; font-weight: bold "> 
                    @item.DateTime.ToShortTimeString()
                </span>
              </p>
              
          </div>
          <div class="flip-card-back" >
            <div>
                @if (item != null && item.targetAudience != 0) {
                  <p class="special-audience-text">Special Audience(s): 
                  @{ foreach (string aud in item.decomposedTarget.Values){
                        <span> @aud </span>
                      }
                   }
                  </p>
                }
                <p>Capacity: <span> @Html.DisplayFor(modelItem => item.Capacity) </span></p>
                
                <p>Hall: <span> @Html.DisplayFor(modelItem => item.Hall) </span></p>
                
              <form name="registerform" method="post">
                <div class="form-group">
                  <input type="hidden" id="eventid" name="eventid" value=@item.Id>

                  @{ 
                    if (Model.ForbiddenGuids.Contains(item.groupId) ||  @spots < 1 || currDateTime > item.DateTime){
                      <input type="submit" value="Register" asp-action="Register" asp-controller="Events" class="button" disabled/>
                    } else {
                      <input type="submit" value="Register" asp-action="Register" asp-controller="Events" class="button active-btn"/>
                    }
                    }
                  
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    }         
    }
  </div>
  if (hidden != Model.GroupedEvents[groupid].Count){
    <hr>
  }
}
</div> 

<form  method="get">
  <button title="Refresh" id="refreshbtn" type="submit" asp-action="Index" asp-controller="Events" class="btn btn-primary float">
    <i class="fas fa-sync-alt"></i>
  </button>
</form>
</div>
</body>

@if (Model.ErrorMessage != null && Model.ErrorMessage != ""){
  <script> 
    alert("@Model.ErrorMessage");
  </script>
}

<script>
  $(document).ready(function() {
    if (isVisible($('#footer'))) {
      $('#refreshbtn').css('bottom','90px');
    } else {
      $('#refreshbtn').css('margin-bottom','20px');
      $('#refreshbtn').css('bottom','40px');
    }


    $('#filter').on('change', function() {
      document.forms["filterform"].submit();
    });

    $('#refreshbtn').on('click', function() {
      setCookie("refreshclick", "true");
    });

    var clicked = checkIfClicked();
    var button = document.getElementById("refreshbtn");

    // If it had been clicked, disable button
    if (clicked) {
      document.getElementById("refreshbtn").disabled = true;
      setTimeout(function(){document.getElementById("refreshbtn").disabled = false; setCookie("refreshclick", "false")},2000);
    }
  });

  function setCookie(name, value){
    // Set cookie to `namevalue;`
    // Won't overwrite existing values with different names
    document.cookie = name + value + ';';
  }

  function checkIfClicked(){
    // Split by `;`
    var cookie = document.cookie.split(";");

    // iterate over cookie array
    for(var i  = 0; i < cookie.length; i++){
      var c = cookie[i];
      // return true if it contains string "refreshclick" and "true"
      if(/refreshclick/.test(c) && /true/.test(c)) return true;   
    }
    
    return false;
  }

  function isVisible(elment) {
    var vpH = $(window).height(), // Viewport Height
        st = $(window).scrollTop(), // Scroll Top
        y = $(elment).offset().top;

    return y <= (vpH + st);
  }

  $(window).scroll(function() {

      var footerHeight = document.getElementById('footer').offsetHeight;
      if (isVisible($('#footer'))) {
        $('#refreshbtn').css('bottom',footerHeight + 10);
      } else {
          $('#refreshbtn').css('bottom','30px');
      }
  });  

</script>