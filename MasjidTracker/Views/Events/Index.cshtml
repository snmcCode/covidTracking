@model MasjidTracker.FrontEnd.Models.EventViewModel

@{
    ViewData["Title"] = "Events";
    bool showModal = ViewBag.EventFull == true ? true : false;
    string defaultVal = ViewBag.Selected == null ? "SNMC" : ViewBag.Selected;
    DateTime currDateTime = DateTime.Now;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <script src="https://kit.fontawesome.com/bdd89edb33.js"></script>
    <link rel="manifest" href="/manifest.json" />

    <link rel="stylesheet" href="~/css/events.css" />
    <link rel="manifest" href="/manifest.json" />
    <title>Events</title>
</head>


<body>

<br>
 <div style="text-align: center; background-color: #F5FBFD; padding: 15px; margin-bottom: 30px; border-radius: 6px;">
    <h5 style="font-weight: bold">READ ME</h5> 
    <p style="font-size: 15px; margin-bottom: 0px;"> 
      You can only register for one event per row. 
    </p>
    <hr style="width:20%; margin-bottom: 15px; margin-top:15px;">
    <p style="font-size: 15px; margin-bottom: 0px;"> 
       If you were unable to register because an event had reached capacity, please continue to check the site regularly,
      as other people may unregister. 
    </p>
    <hr style="width:20%; margin-bottom: 15px; margin-top:15px;">
    <p style="font-size: 15px; margin-bottom: 0px;"> 
      If you can no longer attend an event, please unregister so that someone else may register. 
    </p>
  </div>

  <div class = "heading">
    <h2>My Events</h2>
  </div>
   
  <div class="scrolling-wrapper"> 
     @if (Model.UserEvents.Count == 0) {
      <div><i> You are not registered in any events.</i> </div>
    } else {
        @foreach (var item in Model.UserEvents)
        {
          if(!(currDateTime > item.DateTime.AddHours(1))){
          <div class="mycard">
              @{var colour = "pink";}
              <div class="myfront">
                @{if (item.OrgId == 1){ // snmc
                  colour = "palevioletred";
                }
                }
                <div class="d-flex align-items-start align-content-center flex-column myfront-content">
                  <p class="mb-auto align-items-start align-content-center flex-column" style="align-self: center;">
                    <span style="align-self: center; padding-bottom: 4px">
                      <span> <i class="fas fa-mosque" style = "color: @colour; font-size: 1.6rem;"></i> </span> 
                      <span style = "color: @colour; font-size: 1.6rem;"> 
                          @{var event_org_string = (EventsOrgEnum)item.OrgId;}
                          @event_org_string
                      </span>
                    </span>
                  </p>
                  <div class="event-name mt-auto" style="text-shadow: 0 0 25px deeppink;">@Html.DisplayFor(modelItem => item.Name) </div> <br>
                  <div class="mb-auto" style = "color: black; font-size: 0.8rem; align-self: center;"> 
                      @item.DateTime.ToLongDateString()
                  </div>
                  <div class="mt-auto" style = "color: black; font-size: 0.8rem; align-self: center; "> 
                      @item.DateTime.ToShortTimeString()
                  </div>
                  <div class="mt-auto" style= "align-self: center; padding-top: 2px">
                    <span class="form-group"> 
                      <form name="unregisterform" method="post">  
                        <input type="hidden" id="eventid" name="eventid" value=@item.Id>
                          @{ 
                            if (currDateTime > item.DateTime ){
                              <input type="submit" value="Unregister" asp-action="Unregister" asp-controller="Events" class="button" disabled/>
                            } else {
                              <input type="submit" value="Unregister" asp-action="Unregister" asp-controller="Events" class="button"/>
                            }
                          }                  
                      </form>
                    </span>
                  </div>
                   
                </div>              
              </div>
            </div>
          }
        } 
      }
  </div> 
 
<br><br>

  <div class = "heading">
    <h2>All Events</h2> 
  </div>

  <div style="margin-left: 18px">
    <p class="description">  
      <form name="filterform" method="post" asp-action="FilterEvents" asp-controller="Events">
        Filter by Organization:
        <select onchange="" id="filter" name="selection" style="border:none;" asp-items="new SelectList(Enum.GetValues(typeof(EventsOrgEnum)))">
          <option value="" selected disabled hidden>@defaultVal</option>
          <option value="All">All</option>
        </select>
      </form>
    </p>
  </div>

 <hr>

  @foreach (var groupid in Model.GroupedEvents.Keys) // for each group
  {
    <div class="scrolling-wrapper">
    @{int hidden = 0;}
    @foreach (var item in Model.GroupedEvents[groupid]) // for each event in the group
    {
      var showCard = item.Capacity > 0 && !(currDateTime > item.DateTime.AddHours(1));
      if (!showCard) hidden++;
      if (showCard){
    <div class="card" >
        @{var colour = "pink";}
        <div class="front" >
            @{if (item.OrgId == 1){
              colour = "palevioletred";
            }
            }
           
            <p  class="d-flex align-items-start align-content-center flex-column" style="margin: 4px; height: 100%; width: 100%; padding: 25px 2px 20px 2px;">
              <span style="align-self: center;">
                <span> <i class="fas fa-mosque" style = " color: @colour; font-size: 1.6rem; "></i> </span> 
                <span class="" style = "color: @colour; font-size: 1.6rem;"> 
                    @{var event_org_string = (EventsOrgEnum)item.OrgId;}
                    @event_org_string
                </span>
              </span>
              
              <br>
              <span class="mb-auto event-name">@Html.DisplayFor(modelItem => item.Name) </span> 
            
              <span class="mt-auto" style = "color: black; font-size:medium; align-self: center; "> 
                  @item.DateTime.ToLongDateString()
              </span>  

               <span class="mt-auto" style = "color: black; font-size:medium; align-self: center; "> 
                  @item.DateTime.ToShortTimeString()
              </span>
            </p>
            
          </div>
        <div class="back">
          <div>
              <p>Capacity: <span> @Html.DisplayFor(modelItem => item.Capacity) </span></p>
              <p>Remaining Spots: <span> @{var spots = Math.Max(0, item.Capacity - item.bookingCount);} @spots </span></p>
              <p>Hall: <span> @Html.DisplayFor(modelItem => item.Hall) </span></p>
            <form name="registerform" method="post">
              <div class="form-group">
                <input type="hidden" id="eventid" name="eventid" value=@item.Id>

                @{ 
                  if (Model.ForbiddenGuids.Contains(item.groupId) ||  @spots < 1 || currDateTime > item.DateTime){
                   <input type="submit" value="Register" asp-action="Register" asp-controller="Events" class="button" disabled/>
                  } else {
                    <input type="submit" value="Register" asp-action="Register" asp-controller="Events" class="button"/>
                  }
                  }
                
              </div>
            </form>
          </div>
        </div>
      </div>
    }         
    }
  </div>
  if (hidden != Model.GroupedEvents[groupid].Count){
    <hr>
  }
}
</div> 

</body>

@if (showModal == true){
  <script> 
    alert("Sorry, you cannot register for this event. It filled up while you were on this page.");
  </script>
}

<script>
  $(document).ready(function() {
    $('#filter').on('change', function() {
      console.log("Hello world");
      document.forms["filterform"].submit();
    });
  });
</script>