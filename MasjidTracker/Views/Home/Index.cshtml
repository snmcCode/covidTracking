@model MasjidTracker.FrontEnd.Models.Visitor

@{
    ViewData["Title"] = "Home Page";
}

<head>
    <link rel="manifest" href="/manifest.json" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>

<div class="col-md-6">
    @{
        if (Model != null)
        {
        <img id="bannerImg" src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.QrCode))" style="width:100%" />
        }
        else
        {
        <img id="bannerImg" style="width:100%" />
        <div id="userSignIn">
            <form asp-action="Signin">
                <div class="form-group">
                    <input name="id" id="id" placeholder="Enter user id" class="form-control" />
                </div>
                <div class="form-group">
                    <input type="submit" value="Sign in" class="btn btn-primary" />
                    <a class="btn btn-outline-primary" href="/Registration">Sign Up</a>
                </div>
            </form>
        </div>
        }
    }
</div>

@if (Model != null)
{

<div class="col-md-6">
    <table>
        <thead>
        </thead>
        <tbody>
            <tr><td><b>First name:</b></td> <td>@Model.FirstName</td></tr>
            <tr><td><b>Last name:</b></td>  <td>@Model.LastName</td></tr>
            <tr><td><b>User ID:</b></td> <td>@Model.Id</td></tr>
        </tbody>
    </table>
</div>

<div>
    <button id="signOut" class="btn btn-outline-primary" onclick="signOut()">Sign out</button>
</div>

}

<button class="add-button">Add to home screen</button>

<div class="header-card" name="ios-banner" id="ios-banner">
    Install this webapp to your iPhone. Tap the "Share" button and select "Add to Home Screen"
</div>

<script type="module">
    import 'https://cdn.jsdelivr.net/npm/@@pwabuilder/pwaupdate';

    const el = document.createElement('pwa-update');
    document.body.appendChild(el);
</script>

<script>

    // Detects if device is on iOS
    const isIos = () => {
        const userAgent = window.navigator.userAgent.toLowerCase();
        return /iphone|ipad|ipod/.test( userAgent );
    }
    // Detects if device is in standalone mode
    const isInStandaloneMode = () => ('standalone' in window.navigator) && (window.navigator.standalone);

    $(document).ready(function () {

        if (isIos() && !isInStandaloneMode()) {
            $("#ios-banner").show();
        } else {
            $("#ios-banner").hide();
        }

        var dataImage = localStorage.getItem('imgData');
        var bannerImage = document.getElementById('bannerImg');
        if (dataImage != null && bannerImage.src == "") {
            loadQRCode();
        }
        else if (bannerImg.src != "") {
            saveQRCode();
        }
    });

    function getBase64Image(img) {

        var bannerImage = $("#bannerImg");
        var canvas = document.createElement("canvas");
        canvas.width = img.width;
        canvas.height = img.height;

        var ctx = canvas.getContext("2d");
        ctx.drawImage(img, 0, 0, bannerImage.width(), bannerImage.height());

        var dataURL = canvas.toDataURL("image/png");
        return dataURL.replace(/^data:image\/(png|jpg);base64,/, "");
    }

    function saveQRCode() {
        var bannerImage = document.getElementById('bannerImg');
        var imgData = getBase64Image(bannerImage);
        localStorage.setItem("imgData", imgData);
        $("#userSignIn").hide();
    }

    function loadQRCode() {
        //alert("load qr code");
        var dataImage = localStorage.getItem('imgData');

        if (dataImage != null) {
            bannerImg = document.getElementById('bannerImg');
            bannerImg.src = "data:image/png;base64," + dataImage;
        }

        $("#userSignIn").hide();
    }

    function signOut() {
        localStorage.clear();
        location.href = '@Url.Action("Index", "Home")';
    }

    let deferredPrompt;
    const addBtn = document.querySelector('.add-button');
    addBtn.style.display = 'none';

    window.addEventListener('beforeinstallprompt', (e) => {
      // Prevent Chrome 67 and earlier from automatically showing the prompt
      e.preventDefault();
      // Stash the event so it can be triggered later.
      deferredPrompt = e;
      // Update UI to notify the user they can add to home screen
      addBtn.style.display = 'block';

      addBtn.addEventListener('click', (e) => {
        // hide our user interface that shows our A2HS button
        addBtn.style.display = 'none';
        // Show the prompt
        deferredPrompt.prompt();
        // Wait for the user to respond to the prompt
        deferredPrompt.userChoice.then((choiceResult) => {
            if (choiceResult.outcome === 'accepted') {
              console.log('User accepted the A2HS prompt');
            } else {
              console.log('User dismissed the A2HS prompt');
            }
            deferredPrompt = null;
          });
      });
    });
</script>